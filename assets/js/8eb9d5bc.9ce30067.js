"use strict";(self.webpackChunkgwoc_open_source=self.webpackChunkgwoc_open_source||[]).push([[746],{2938:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return h},default:function(){return p}});var r=o(7462),i=o(3366),n=(o(7294),o(3905)),a=["components"],s={sidebar_position:3},l="What Is a Distributed Version Control System (DVCS)?",c={unversionedId:"Background/1.2_What_Is_a_Distributed_Version_Control_System",id:"Background/1.2_What_Is_a_Distributed_Version_Control_System",isDocsHomePage:!1,title:"What Is a Distributed Version Control System (DVCS)?",description:"Distributed Version Control System is a type of Version Control System which is used in software development that brings  a local copy of the complete repository to every team member\u2019s computer. The entire codebase and the project history is mirrored on every developer\u2019s computer in the team. After this the developers can then commit, branch and merge locally, this improves the ability to work offline. This eliminates the need to rely on a single server for backups.",source:"@site/docs/Background/1.2_What_Is_a_Distributed_Version_Control_System.md",sourceDirName:"Background",slug:"/Background/1.2_What_Is_a_Distributed_Version_Control_System",permalink:"/docs/Background/1.2_What_Is_a_Distributed_Version_Control_System",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Rise Of Open Source Programming Languages",permalink:"/docs/Background/1.1_Rise_Of_Open_Source_Programming_Languages"},next:{title:"What are open-source operating systems?",permalink:"/docs/Background/1.3_Recent_OS_Projects"}},h=[],d={toc:h};function p(e){var t=e.components,o=(0,i.Z)(e,a);return(0,n.kt)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"what-is-a-distributed-version-control-system-dvcs"},"What Is a Distributed Version Control System (DVCS)?"),(0,n.kt)("p",null,"Distributed Version Control System is a type of Version Control System which is used in software development that brings  a local copy of the complete repository to every team member\u2019s computer. The entire codebase and the project history is mirrored on every developer\u2019s computer in the team. After this the developers can then commit, branch and merge locally, this improves the ability to work offline. This eliminates the need to rely on a single server for backups.\nGit is one of the most used and famous DVCS. Other than Git there are other DVCS like : Mercurial, and Bazaar. "),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/61137052/133909769-90fd2628-2ef1-4ce6-ba27-a97f05c4973f.png",alt:"DVCS"})),(0,n.kt)("hr",null),(0,n.kt)("h1",{id:"the-evolution-of-distributed-version-control-systems"},"The Evolution of Distributed Version Control Systems."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"2000- BitKeeper :")," It was originally released as proprietary software. It was used in the development of the Linux kernel from 2002 to 2005. BitKeeper ended the \u2018Free Use\u2019 support in 2005 and started asking users to switch to the commercial version. In 2016 it was released as open-source software under the Apache License 2.0. BitKeeper is no longer developed.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"2001 - GNU Arch :")," It is said to be one of the first free open source distributed version control systems that was part of the GNU project. It was created by Thomas Lord. But soon after it launched it got deprecated after receiving a lot of criticism mainly because it was difficult to learn and use. ")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"2005 - Git :")," After BitKeeper becoming a proprietary version control system many developers stopped using it and then Git was created, a free open source distributed version control system developed by Linus Trovals to continue working on the Linux Kernel. "),(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Now in 2021 it is one of the most used and famous DVCS."))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"2005 - Mercurial :")," It was also originally created to replace BitKeeper for developing Linux Kernel. But the team decided to go with Git instead of Mercurial. Although Mercurial was not selected to manage the Linux kernel sources, it has been adopted by several organizations, including Facebook, the W3C, and Mozilla. ")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"2007 - Bazaar :")," It is a distributed and client\u2013server revision control system which is free software, part of the GNU Project and sponsored by Canonical. It was originally authored by Martin Pool and then developed by Canonical and community. "),(0,n.kt)("hr",{parentName:"li"}))),(0,n.kt)("h1",{id:"limitations-of-the-dvcs-model"},"Limitations of the DVCS Model."),(0,n.kt)("p",null,"With all the advantages that the DVCS model provides there are still a few limitations and disadvantages of it. "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Suppose if a project is very large and contains a lot of big binary files in that case, downloading the entire project in DVCS can take more time and space than usual."),(0,n.kt)("li",{parentName:"ul"},"Another problem with DVCS is that there is no \u2018Latest Release\u2019 as such. Every developer is working on a new feature on their copy of the repository so getting to know which copy is the most recent one is tough. "),(0,n.kt)("li",{parentName:"ul"},"The recent concern in the DVCS is related with Security of the project. Giving developers access to have a copy of the entire codebase of the software project on their systems locally might lead to risk of attacks.")),(0,n.kt)("hr",null),(0,n.kt)("h1",{id:"why-companies-switch-to-distributed-version-control-system-dvcs-instead-of-cvcs"},"Why Companies Switch to Distributed Version Control System (DVCS) instead of CVCS?"),(0,n.kt)("p",null,"The Centralized Version Control System is based on the client server approach where the server is the master repository that contains all of the versions of the code. Now you will be committing and merging your changes directly to the master/main branch making everything centralized. There will be just one repository and that will contain all the history or version of the code. But CVCS will have various disadvantages coming along with it, which are then overcome by the DVCS such as : "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If the main server goes down then the entire project is at a stand by and in jeopardy making the project backup and its history unavailable. But this will not happen in DVCS as every developer has his or her local copy of the source code. "),(0,n.kt)("li",{parentName:"ul"},"The chances of merge conflicts occurring in CVCS are more when compared to DVCS. That is because all the code is getting committed into the same repository and in the same branch. Whereas in the DVCS merge conflicts with other developer\u2019s code are less because every developer works on their own piece of code."),(0,n.kt)("li",{parentName:"ul"},"As the system in CVCS requires a remote server communication all the time therefore the code cannot be quickly merged. Also the CVCS doesn\u2019t allow teams to use different branching strategies, which is a core foundation of DVCS. ")),(0,n.kt)("p",null,"These are just a few reasons why Companies are Switching to Distributed Version Control System (DVCS) instead of CVCS."))}p.isMDXComponent=!0}}]);
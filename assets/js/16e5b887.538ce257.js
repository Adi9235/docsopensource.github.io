"use strict";(self.webpackChunkgwoc_open_source=self.webpackChunkgwoc_open_source||[]).push([[802],{3905:function(t,e,n){n.d(e,{Zo:function(){return h},kt:function(){return m}});var a=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,i=function(t,e){if(null==t)return{};var n,a,i={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var c=a.createContext({}),l=function(t){var e=a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},h=function(t){var e=l(t.components);return a.createElement(c.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},g=a.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,c=t.parentName,h=s(t,["components","mdxType","originalType","parentName"]),g=l(n),m=i,d=g["".concat(c,".").concat(m)]||g[m]||u[m]||r;return n?a.createElement(d,o(o({ref:e},h),{},{components:n})):a.createElement(d,o({ref:e},h))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,o=new Array(r);o[0]=g;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:i,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9895:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return h},default:function(){return g}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],s={sidebar_position:5},c="Git Cheat Sheet",l={unversionedId:"Share Things With Community/3.5_Git_Cheat_Sheet",id:"Share Things With Community/3.5_Git_Cheat_Sheet",isDocsHomePage:!1,title:"Git Cheat Sheet",description:"This cheat sheet features the most important and commonly used Git commands for easy reference.",source:"@site/docs/Share Things With Community/3.5_Git_Cheat_Sheet.md",sourceDirName:"Share Things With Community",slug:"/Share Things With Community/3.5_Git_Cheat_Sheet",permalink:"/docs/Share Things With Community/3.5_Git_Cheat_Sheet",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"List of Open Source Events",permalink:"/docs/Share Things With Community/3.4_List_Of_Open_Source_Events"},next:{title:"Finding Github Issues",permalink:"/docs/Share Things With Community/3.6_Finding_Github_Issues"}},h=[],u={toc:h};function g(t){var e=t.components,n=(0,i.Z)(t,o);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"git-cheat-sheet"},"Git Cheat Sheet"),(0,r.kt)("p",{align:"center"},"This cheat sheet features the most important and commonly used Git commands for easy reference."),(0,r.kt)("h2",null,"Installation and GUIs"),(0,r.kt)("b",null,"Git for all Platforms - "),"http://git-scm.com/",(0,r.kt)("b",null,"GitHub for Windows/Mac - "),"http://desktop.github.com/ For ",(0,r.kt)("i",null,"Linux")," and ",(0,r.kt)("i",null,"Solaris")," platforms, the latest release is available on the official Git web site.",(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"45%",src:"https://user-images.githubusercontent.com/78658727/133889335-465acbe0-76fa-43d8-8854-ca97fd28da1b.PNG"}),(0,r.kt)("img",{width:"45%",src:"https://user-images.githubusercontent.com/78658727/133889343-db7e739f-a229-4bf1-8724-8bfaff4140bb.PNG"})),(0,r.kt)("h2",null,"Setup Configuration"),(0,r.kt)("p",null,"  Configuring user information used across all local repositories "),(0,r.kt)("b",null,'`git config --global user.name "[firstname lastname]"`'),"set an author name to be used for all commits by the current user",(0,r.kt)("b",null,'`git config --global user.email "[valid-email]"`'),"set an author email that will be associated with each history marker",(0,r.kt)("b",null,"`git config --global --edit`"),"open the global configuration file in a text editor for manual editing",(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"35%",alt:"3",src:"https://user-images.githubusercontent.com/78658727/133890268-59ac846e-04b7-4e03-9a52-63eed6ff264b.PNG"}),(0,r.kt)("img",{width:"45%",alt:"4",src:"https://user-images.githubusercontent.com/78658727/133890206-382784b1-d61b-413a-bda6-6c10c1bb40c5.PNG"})),(0,r.kt)("h2",null,"Git Basics and Stage"),(0,r.kt)("p",null,"  Working with repositories and the Git staging area"),(0,r.kt)("b",null,"`git init`"),"initialize an existing directory as a Git repository",(0,r.kt)("b",null,"`git clone [url]`"),"retrieve an entire repository from a hosted location via URL",(0,r.kt)("b",null,"`git status`"),"list which files are staged, unstaged, and untracked",(0,r.kt)("b",null,"`git add [file]`"),"stage all changes in working directory for the next commit",(0,r.kt)("b",null,"`git reset [file]`"),"unstage a file while retaining the changes in working directory",(0,r.kt)("b",null,'`git commit -m "[descriptive message]"`'),"commit your staged content as a new commit snapshot",(0,r.kt)("b",null,"`git log`"),"show all commits in the current branch\u2019s history",(0,r.kt)("b",null,"`git diff`"),"diff of what is changed but not staged",(0,r.kt)("b",null,"`git diff --staged`"),"diff of what is staged but not yet committed",(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"45%",alt:"5",src:"https://user-images.githubusercontent.com/78658727/133890737-0203d18e-aac5-4a78-bcd3-29e9db6d9a08.PNG"}),(0,r.kt)("img",{width:"32%",alt:"6",src:"https://user-images.githubusercontent.com/78658727/133890944-6e9b8371-7bac-4b5a-a4eb-dccb91b7ba52.PNG"})),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"45%",alt:"7",src:"https://user-images.githubusercontent.com/78658727/133890992-02697038-8501-4732-9aa0-be7d03fede45.PNG"}),(0,r.kt)("img",{width:"32%",alt:"8",src:"https://user-images.githubusercontent.com/78658727/133890988-d0e9a50a-9405-4cbf-b035-61033b31b04c.PNG"})),(0,r.kt)("h2",null,"Branch and Merge"),(0,r.kt)("p",null,"  Isolating work in branches, changing context, and integrating changes "),(0,r.kt)("b",null,"`git branch`"),"list your branches. A * will appear next to the currently active branch",(0,r.kt)("b",null,"`git branch [branch-name]`"),"create a new branch at the current commit",(0,r.kt)("b",null,"`git checkout -b [branch-name]`"),"create and check out a new branch. Drop the -b flag to checkout an existing branch",(0,r.kt)("b",null,"`git merge [branch-name]`"),"merge the specified branch\u2019s history into the current one",(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"40%",alt:"branch 1",src:"https://user-images.githubusercontent.com/78658727/133892167-9c07ee98-3ac6-4cb3-a9a9-705a81f8f56d.PNG"}),(0,r.kt)("img",{width:"35%",alt:"branch 2",src:"https://user-images.githubusercontent.com/78658727/133892177-ba4e08d7-2eb8-4313-a826-22b2c383ba46.PNG"})),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"35%",alt:"branch 3",src:"https://user-images.githubusercontent.com/78658727/133892187-fe60efee-92e9-4715-bc01-d6d2842456e1.PNG"})),(0,r.kt)("h2",null,"Git Log"),(0,r.kt)("p",null,"  Examining logs and object information "),(0,r.kt)("b",null,"`git log --oneline`"),"condense each commit to a single line",(0,r.kt)("b",null,"`git log --stat`"),"include which files were altered and the relative number of lines that were added or deleted from each of them",(0,r.kt)("b",null,"`git log branchB..branchA`"),"show the commits on branchA that are not on branchB",(0,r.kt)("b",null,'`git log --author="[name]"`'),"search for commits by a particular author",(0,r.kt)("b",null,"`git log -- [file]`"),"only display commits that have the specified file",(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"45%",alt:"log 1",src:"https://user-images.githubusercontent.com/78658727/133892362-f3ecbd62-e303-4572-930e-3091f411fdf5.PNG"}),"  ",(0,r.kt)("img",{width:"45%",alt:"log 2",src:"https://user-images.githubusercontent.com/78658727/133892324-ad0f9e12-6fe0-4a5e-ac2f-17ed5368472a.PNG"})),(0,r.kt)("h2",null,"Rewrite History"),(0,r.kt)("p",null,"  Rewriting branches, updating commits and clearing history "),(0,r.kt)("b",null,"`git rebase [branch]`"),"apply any commits of current branch ahead of specified one",(0,r.kt)("b",null,"`git reset`"),"reset staging area to match most recent commit, but leave the working directory unchanged",(0,r.kt)("b",null,"`git reset --hard [commit]`"),"clear staging area, rewrite working tree from specified commit",(0,r.kt)("h2",null,"Share and Update"),(0,r.kt)("p",null,"  Retrieving updates from another repository and updating local repos "),(0,r.kt)("b",null,"`git remote add [alias] [url]`"),"create a new connection to a remote repo. After adding a remote, you can use [name] as a shortcut for [url] in other commands",(0,r.kt)("b",null,"`git fetch [alias]`"),"fetch down all the branches from that Git remote",(0,r.kt)("b",null,"`git pull`"),"fetch and merge any commits from the tracking remote branch",(0,r.kt)("b",null,"`git push [alias] [branch]`"),"transmit local branch commits to the remote repository branch",(0,r.kt)("b",null,"`git push [alias] --all`"),"push all of your local branches to the specified remote",(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"45%",alt:"share 1",src:"https://user-images.githubusercontent.com/78658727/133892452-043633e5-19ad-4123-8525-6ef758b5d5cd.PNG"}),(0,r.kt)("img",{width:"35%",alt:"share 2",src:"https://user-images.githubusercontent.com/78658727/133892461-4a43ef1f-fa86-421f-9878-f888679130af.PNG"})),(0,r.kt)("h2",null,"Temporary Commits"),(0,r.kt)("p",null,"  Temporarily store modified, tracked files in order to change branches "),(0,r.kt)("b",null,"`git stash`"),"save modified and staged changes",(0,r.kt)("b",null,"`git stash list`"),"list stack-order of stashed file changes",(0,r.kt)("b",null,"`git stash pop`"),"write working from top of stash stack",(0,r.kt)("b",null,"`git stash drop`"),"discard the changes from top of stash stack",(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"30%",alt:"stash 1",src:"https://user-images.githubusercontent.com/78658727/133892971-f08da4e5-bba1-4ef1-a333-5366cae39ce0.PNG"}),(0,r.kt)("img",{width:"50%",alt:"stash 2",src:"https://user-images.githubusercontent.com/78658727/133892978-292746c4-a62f-4f51-9aa9-a5017c59d399.PNG"})),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"35%",alt:"stash 3",src:"https://user-images.githubusercontent.com/78658727/133892996-d649c456-9c55-46cd-9209-6ef0b868d049.PNG"}),(0,r.kt)("img",{width:"45%",alt:"stash 4",src:"https://user-images.githubusercontent.com/78658727/133893009-088b7566-c4c2-44b6-baa5-32fe5d3ee828.PNG"})),(0,r.kt)("h2",null,"Git Tags"),(0,r.kt)("p",null,"  References to specific points in Git history "),(0,r.kt)("b",null,"`git tag [tagname]`"),"create a lightweight tag",(0,r.kt)("b",null,'`git tag -a [tagname] -m "[message]"`'),"create an annotated tag",(0,r.kt)("b",null,"`git tag`"),"list stored tags in a repo",(0,r.kt)("b",null,"`git checkout [tagname]`"),"view the state of a repo at a tag",(0,r.kt)("b",null,"`git push [alias] [tagname]`"),"tags have to be explicitly passed to git push",(0,r.kt)("b",null,"`git tag -d [tagname]`"),"delete a tag",(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"40%",alt:"tag 1",src:"https://user-images.githubusercontent.com/78658727/133893162-faaa3ce2-b41b-4bdf-9c63-a5e0569722f9.PNG"}),(0,r.kt)("img",{width:"40%",alt:"tag 2",src:"https://user-images.githubusercontent.com/78658727/133893174-fc4252d1-2a06-4f5d-a97d-cea538d6e972.PNG"})))}g.isMDXComponent=!0}}]);